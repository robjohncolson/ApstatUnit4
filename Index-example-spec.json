{
  "programStructure": {
    "fileName": "index.html",
    "description": "A single-page web application designed as a study aid for AP Statistics Unit 1 (Exploring One-Variable Data). It provides learning resources, progress tracking, and tools to interact with an AI assistant (Grok).",
    "rootElement": "html",
    "majorSections": [
      {
        "name": "Head",
        "description": "Contains metadata, links to external resources (CSS, JS libraries), and inline styles.",
        "components": [
          {"type": "Meta", "attributes": ["charset", "viewport"]},
          {"type": "Title", "content": "AP Statistics Unit 1: Exploring One-Variable Data"},
          {"type": "Script", "source": "Tailwind CSS (CDN)", "purpose": "Styling Framework"},
          {"type": "Script", "source": "React & ReactDOM (CDN)", "purpose": "UI Library (for Learning Flow tab)"},
          {"type": "Script", "source": "Babel Standalone (CDN)", "purpose": "JSX Transpilation for React"},
          {"type": "Script", "source": "Mermaid JS (CDN)", "purpose": "Diagram Rendering (for Flowchart tab)"},
          {"type": "Style", "purpose": "Custom CSS for tab behavior and styling"}
        ]
      },
      {
        "name": "Body",
        "description": "Contains the visible content and interactive elements of the page.",
        "layout": "Centered container using Tailwind CSS",
        "components": [
          {
            "name": "Header",
            "description": "Page title, subtitle, and AP exam weight information.",
            "elements": ["h1", "p", "div (Exam Weight)"]
          },
          {
            "name": "Tab Navigation",
            "description": "Allows users to switch between different content sections.",
            "elements": ["div (flex container)"],
            "tabs": [
              {"id": "tab-learning-flow", "label": "Learning Flow"},
              {"id": "tab-flowchart", "label": "Flowchart"},
              {"id": "tab-grok-prompt", "label": "Grok Prompt"},
              {"id": "tab-study-materials", "label": "Study Materials"}
            ],
            "interaction": "Clicking a tab button activates it and displays the corresponding content pane."
          },
          {
            "name": "Tab Content Area",
            "description": "Main container holding the content for each tab. Only one tab's content is visible at a time.",
            "elements": ["div (main content wrapper)"],
            "contentPanes": [
              {
                "id": "content-learning-flow",
                "controlledBy": "tab-learning-flow",
                "description": "Displays a step-by-step learning guide.",
                "technology": "React",
                "reactComponent": "APStatLearningFlow",
                "renderedInto": "#learning-flow-app"
              },
              {
                "id": "content-flowchart",
                "controlledBy": "tab-flowchart",
                "description": "Displays a visual flowchart of the recommended learning process using Mermaid JS.",
                "elements": ["h2", "p", "div (Mermaid container #flowchart)", "div (Color Key)"],
                "dynamicContent": "Flowchart rendered by Mermaid JS based on `flowchartDefinition` string."
              },
              {
                "id": "content-grok-prompt",
                "controlledBy": "tab-grok-prompt",
                "description": "Provides a prompt for the Grok AI assistant, instructions, and quick access to the current/all study topics.",
                "layout": "Two-column grid",
                "leftColumn": [
                  {"element": "h3", "content": "Get the Prompt"},
                  {"element": "pre#grok-prompt", "dynamicContent": "Populated by `grokPrompt` JS variable."},
                  {"element": "button#copy-button", "interaction": "Copies prompt text to clipboard."},
                  {"element": "a (Open Grok)", "interaction": "Links to grok.com."},
                  {"element": "h3", "content": "Video Learning Guide"},
                  {"element": "ol", "content": "Step-by-step instructions for using Grok with PDFs."},
                  {"element": "div (Help Link)", "interaction": "Links to YouTube tutorial."}
                ],
                "rightColumn": [
                  {"element": "div#current-topic-info", "dynamicContent": "Displays details (name, description, links, checkboxes) of the current topic, updated by `updateCurrentTopicInfo()`."},
                  {"element": "button#complete-current-topic-btn", "interaction": "Marks the current topic as completed using `markTopicAsCompleted()` or resets progress if all done."},
                  {"element": "div#quick-access-topics", "dynamicContent": "Displays compact cards for all topics with status and links, updated by `populateQuickAccessTopics()`. Allows setting the current topic."}
                ]
              },
              {
                "id": "content-study-materials",
                "controlledBy": "tab-study-materials",
                "description": "Main section for accessing study materials (videos, PDFs) and tracking progress.",
                "elements": [
                  {"element": "h2", "content": "Study Materials Title"},
                  {"element": "p", "content": "Instructions"},
                  {"element": "div#all-completed-container", "visibility": "Shown when all topics are completed.", "interaction": ["button#reset-progress-btn"]},
                  {"element": "div (Grok Prompt CTA)", "interaction": "Button to switch to Grok Prompt tab."},
                  {"element": "select#topic-select", "interaction": "Dropdown to select and scroll to a topic."},
                  {"element": "div#progress-container", "contains": "div#progress-bar", "dynamicContent": "Visual progress bar updated by `updateProgressBar()`."},
                  {"element": "div#topic-cards-container", "dynamicContent": "Populated with topic cards generated by `createTopicCard()` based on `pdfFiles` data."},
                  {"element": "div#next-topic-container", "visibility": "Shown when the current topic is completed (unless all are done).", "dynamicContent": "Displays the next incomplete topic card."}
                ]
              }
            ]
          }
        ]
      },
      {
        "name": "JavaScript (Inline & Babel)",
        "description": "Contains the core logic for interactivity, data management, and dynamic content generation.",
        "scope": "Global and within specific event listeners/components.",
        "keyVariables": [
          {"name": "flowchartDefinition", "type": "String", "purpose": "Mermaid syntax for the flowchart."},
          {"name": "grokPrompt", "type": "String", "purpose": "Text prompt for the Grok AI."},
          {"name": "pdfFiles", "type": "Array<Object>", "purpose": "Core data structure holding all topic information, including videos, quizzes, completion status, and PDF paths."}
        ],
        "keyFunctions": [
          {"name": "renderFlowchart", "purpose": "Renders the Mermaid flowchart."},
          {"name": "createTopicCard", "purpose": "Generates HTML for a single topic card (Study Materials)."},
          {"name": "populateTopicCards", "purpose": "Populates the Study Materials tab with topic cards."},
          {"name": "updateCurrentTopicInfo", "purpose": "Updates the current topic display in the Grok Prompt tab."},
          {"name": "populateQuickAccessTopics", "purpose": "Updates the quick access topic list in the Grok Prompt tab."},
          {"name": "markTopicAsCompleted", "purpose": "Marks all items within a topic as complete and updates state/UI."},
          {"name": "markVideoComplete / markQuizComplete", "purpose": "Marks individual items (video/quiz) as complete/incomplete."},
          {"name": "handleItemCompletionChange", "purpose": "Event handler for item completion checkboxes."},
          {"name": "saveTopicProgress / loadTopicProgress", "purpose": "Persists and retrieves topic completion state using localStorage."},
          {"name": "updateProgressBar", "purpose": "Updates the visual progress bar."},
          {"name": "checkAllTopicsCompleted", "purpose": "Checks if all learning items are completed."},
          {"name": "resetProgress", "purpose": "Resets all completion data in `pdfFiles` and localStorage."},
          {"name": "Tab Switching Logic", "location": "DOMContentLoaded", "purpose": "Handles showing/hiding tab content."},
          {"name": "Copy Button Logic", "location": "DOMContentLoaded", "purpose": "Handles copying Grok prompt to clipboard."}
        ],
        "reactComponent": {
          "name": "APStatLearningFlow",
          "purpose": "Renders the interactive learning steps guide in the 'Learning Flow' tab.",
          "stateManagement": "Uses React.useState for `currentStep`.",
          "rendering": "Uses JSX (transpiled by Babel)."
        },
        "eventListeners": [
          {"event": "DOMContentLoaded", "purpose": "Initial setup, event binding, loading saved state."},
          {"event": "click", "targets": [".tab-button", "#copy-button", "#complete-current-topic-btn", ".mark-completed-btn", "#reset-progress-btn", "#quick-access-topics cards (non-link/input areas)"]},
          {"event": "change", "targets": ["#topic-select", "input[type=checkbox] (completion tracking)"]}
        ]
      }
    ],
    "dataManagement": {
      "primaryData": "`pdfFiles` JavaScript array",
      "persistence": "Browser `localStorage`",
      "key": "`apStatsTopicProgress`",
      "format": "JSON stringified representation of topic progress (including individual item status)."
    },
    "userInteractionPoints": [
      "Clicking tabs to navigate.",
      "Clicking 'Copy Prompt' button.",
      "Clicking external links (Grok, AP Classroom, Google Drive, YouTube).",
      "Clicking download links for PDF files.",
      "Selecting a topic from the dropdown.",
      "Checking/unchecking completion boxes for videos and quizzes.",
      "Clicking 'Mark Topic Completed' buttons (both tabs).",
      "Clicking 'Reset Progress' button.",
      "Navigating steps in the React 'Learning Flow' component.",
      "Clicking quick access topic cards to set the current topic."
    ],
    "externalDependencies": [
      {"type": "CSS Framework", "name": "Tailwind CSS"},
      {"type": "JS Library", "name": "React"},
      {"type": "JS Library", "name": "ReactDOM"},
      {"type": "JS Library", "name": "Babel Standalone"},
      {"type": "JS Library", "name": "Mermaid JS"}
    ],
    "styling": {
      "framework": "Tailwind CSS",
      "custom": "Inline `<style>` tag for tab-specific CSS rules."
    }
  }
}